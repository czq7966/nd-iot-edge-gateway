[
    {
        "id": "7c7a09edf982e2f4",
        "type": "tab",
        "label": "全局配置",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "95aaa5b3dec11e56",
        "type": "tab",
        "label": "Z3协调器",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "da35b48ff806507c",
        "type": "mqtt-broker",
        "name": "push",
        "broker": "push-access.sdp.101.com",
        "port": "1780",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "f544f205.d51a7",
        "type": "inject",
        "z": "7c7a09edf982e2f4",
        "name": "初始化",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "52f82eb73840e302"
            ]
        ]
    },
    {
        "id": "d6802406.a5a078",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "数据",
        "rules": [
            {
                "t": "set",
                "p": "data",
                "pt": "global",
                "to": "{\"app\":{\"id\":\"ndiot\",\"name\":\"网龙物联网\"},\"product\":{\"id\":\"nd\",\"name\":\"网龙公司\"},\"namespaces\":{\"CL_VRTYG\":{\"id\":\"\",\"name\":\"\",\"nick\":\"长乐VR体验馆\"},\"FZ_DEV\":{\"id\":\"\",\"name\":\"\",\"nick\":\"福州开发环境\"}},\"devices\":{\"ESP8266x0006dbe5\":{\"id\":\"\",\"name\":\"\",\"nick\":\"\",\"facturer\":\"ND\",\"model\":\"Z3CO2652ESP8266\",\"namespace\":\"FZ_DEV\"}},\"tsl\":{\"ND\":{\"Z3CO2652ESP8266\":{\"define\":{\"tsl_version\":\"\",\"profile\":{\"product_id\":\"产品ID或租户ID\",\"group_id\":\"设备所隶属组ID\",\"manufacturer\":\"设备制造商\",\"device_model\":\"设备型号\",\"device_type\":\"z3-co\",\"device_name\":\"设备名称\",\"device_id\":\"设备ID\",\"owner_id\":\"拥有者ID\",\"heart_beat_sec\":\"int, 心跳间隔(秒),0为无需启动心跳检测\",\"report_exp_sec\":\"int, 主动上报超期检测(秒),无心跳场合,等待设备主动上报\",\"parent_device_id\":\"父设备ID\",\"production_date\":\"生产日期\",\"extend_info\":\"扩展信息\",\"remark\":\"备注信息\"}}}}}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 280,
        "wires": [
            [
                "04a622cf8260f366"
            ]
        ]
    },
    {
        "id": "04a622cf8260f366",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "数据补全",
        "func": "let data = global.get(\"data\");\n\nlet namespaces = data.namespaces;\nlet devices = data.devices;\nlet tsl = data.tsl;\nlet keys;\nlet setDeviceTopic = (device) => {\n    let appId = data.app.id;\n    let typeId = \"/device\";\n    let productId = \"/\" + data.product.id;\n    let parentId = \"/\" + (device.parent || \"0\");\n    let did = \"/\" + device.id;\n    device._inner.topic = {\n        device: {\n            sub: appId + typeId + productId + parentId + did + \"/sub\",\n            pub: appId + typeId + productId + parentId + did + \"/pub\"\n        }\n    };\n}\n\nkeys = Object.keys(namespaces);\nkeys.forEach(key => {\n    namespaces[key].id = key;\n});\n\n\n\nkeys = Object.keys(devices);\nkeys.forEach(key => {\n    let device = devices[key];\n    device.id = key;\n    if(typeof(device.namespace) == \"string\") {\n        device.namespace=namespaces[device.namespace];\n    }\n    device.tsl = tsl[device.facturer][device.model];\n    device._inner = {};\n    setDeviceTopic(device);\n});\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "500adc0994d94415",
        "type": "link out",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "mode": "link",
        "links": [
            "971801346bcfe01d"
        ],
        "x": 365,
        "y": 460,
        "wires": []
    },
    {
        "id": "52f82eb73840e302",
        "type": "OS",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "x": 270,
        "y": 100,
        "wires": [
            [
                "705cd1a4e7548610"
            ]
        ]
    },
    {
        "id": "705cd1a4e7548610",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "OS",
        "rules": [
            {
                "t": "set",
                "p": "os",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 100,
        "wires": [
            [
                "c27b74647cc92e82"
            ]
        ]
    },
    {
        "id": "c27b74647cc92e82",
        "type": "home-dir",
        "z": "7c7a09edf982e2f4",
        "x": 560,
        "y": 100,
        "wires": [
            [
                "3e822ed879b8777e"
            ]
        ]
    },
    {
        "id": "3e822ed879b8777e",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "homedir",
        "rules": [
            {
                "t": "set",
                "p": "os.homedir",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 100,
        "wires": [
            [
                "218508c64f4f08dd"
            ]
        ]
    },
    {
        "id": "9cd429a5958b404e",
        "type": "complete",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "scope": [
            "04a622cf8260f366"
        ],
        "uncaught": false,
        "x": 150,
        "y": 460,
        "wires": [
            [
                "500adc0994d94415"
            ]
        ]
    },
    {
        "id": "c8aeafe354ddd36b",
        "type": "yaml",
        "z": "7c7a09edf982e2f4",
        "property": "payload",
        "name": "",
        "x": 490,
        "y": 180,
        "wires": [
            [
                "b5004c17ff9ea408"
            ]
        ]
    },
    {
        "id": "218508c64f4f08dd",
        "type": "file in",
        "z": "7c7a09edf982e2f4",
        "name": "Z2M配置模板",
        "filename": "E:\\temp\\z2m\\configuration.yaml",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 320,
        "y": 180,
        "wires": [
            [
                "c8aeafe354ddd36b"
            ]
        ]
    },
    {
        "id": "b5004c17ff9ea408",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "z2m.config",
        "rules": [
            {
                "t": "set",
                "p": "z2m.configuration",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 180,
        "wires": [
            [
                "d6802406.a5a078"
            ]
        ]
    },
    {
        "id": "2a50d92d7b1e8c5f",
        "type": "mtcp-server",
        "z": "95aaa5b3dec11e56",
        "action": "action",
        "actionType": "msg",
        "port": "port",
        "portType": "msg",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "xmlAttrkey": "$",
        "xmlCharkey": "_",
        "xmlStrip": false,
        "xmlArray": false,
        "xmlNormalizeTags": false,
        "xmlNormalize": false,
        "write": "payload",
        "writeType": "msg",
        "writeHost": "",
        "writeHostType": "str",
        "writePort": "",
        "writePortType": "str",
        "closeHost": "",
        "closeHostType": "str",
        "closePort": "",
        "closePortType": "str",
        "topic": "",
        "name": "",
        "x": 710,
        "y": 600,
        "wires": [
            [
                "146f6d28af979aef"
            ]
        ]
    },
    {
        "id": "971801346bcfe01d",
        "type": "link in",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "links": [
            "500adc0994d94415"
        ],
        "x": 135,
        "y": 40,
        "wires": [
            [
                "3403f1cca771583e"
            ]
        ]
    },
    {
        "id": "dd1d9c395a642389",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "退出TCP",
        "func": "\nreturn {\n    action: \"kill\",\n    topic: msg.topic\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 560,
        "wires": [
            [
                "2a50d92d7b1e8c5f"
            ]
        ]
    },
    {
        "id": "3403f1cca771583e",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "Z3设备",
        "func": "let gData = global.get(\"data\");\nlet os = global.get(\"os\");\nlet data = {};\nlet tcpPort = 8190;\nlet devices = gData.devices;\nlet z2mDir = os.homedir + \"/../../zigbee2mqtt\"\n\n\ndata.devices = {};\nlet setDevice = (device, define, tcpPort) => {\n    let dataDir = z2mDir + \"/data/\" + device.id; \n    let execStr = \"cd \" + z2mDir;\n    if (os.platform == \"win32\"){\n        execStr =execStr + \"&& set ZIGBEE2MQTT_DATA=\" + dataDir;\n        execStr =execStr + \"&& npm start\";\n    }\n\n    let inner = device._inner;\n    inner.tcp = {\n            port: tcpPort,\n            status: null\n        };\n    inner.z2m = {\n            configuration: {\n                mqtt: {\n                    base_topic: device.id,\n                    server: \"mqtt://push-access.sdp.101.com:1780\",\n                    user: \"ioe\"\n                },\n                serial: {\n                    port: \"tcp://127.0.0.1:\" + tcpPort\n                },\n                frontend: {\n                    port: tcpPort - 100\n                }\n            },\n            datadir: dataDir,\n            configfile: dataDir + \"/configuration.yaml\",\n            exec: execStr,\n            status: null\n        };\n        \n        \n    data.devices[device.id] = device;\n}\n\nlet keys;\nkeys = Object.keys(devices);\nkeys.forEach(key => {\n    let device = devices[key];\n    if (device.tsl && device.tsl.define) {\n        let define = device.tsl.define;\n        if (define.profile.device_type == \"z3-co\") {\n            setDevice(device, define, tcpPort);\n            tcpPort++;\n        }\n    }\n});\n\nflow.set(\"data\", data)\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 40,
        "wires": [
            [
                "7bd292a739fdf092",
                "589883c5ddd06e17"
            ]
        ]
    },
    {
        "id": "4da7e379a1c8765f",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "启动TCP",
        "func": "let data = flow.get(\"data\")\nlet devices = data.devices;\n\nObject.keys(devices).forEach(key => {\n    let device = devices[key];\n    node.send({\n        action: \"listen\",\n        port: device._inner.tcp.port,\n        topic: key\n    })\n});\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 600,
        "wires": [
            [
                "2a50d92d7b1e8c5f"
            ]
        ]
    },
    {
        "id": "24e2bbdf06e9b037",
        "type": "delay",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 230,
        "y": 600,
        "wires": [
            [
                "4da7e379a1c8765f"
            ]
        ]
    },
    {
        "id": "146f6d28af979aef",
        "type": "base64",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 840,
        "y": 600,
        "wires": [
            [
                "7c8a25fc966a2456"
            ]
        ]
    },
    {
        "id": "7c8a25fc966a2456",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "下行数据",
        "func": "let data = flow.get(\"data\");\nlet devices = data.devices;\nlet did = msg.topic;\nlet device = devices[did];\nlet hd = {\n    cmd: 3\n}\nlet pld = {\n    code: msg.payload\n}\n\nreturn {\n    topic: device._inner.topic.device.sub,\n    payload:{\n        hd: hd, \n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 100,
        "wires": [
            [
                "e944094b190529e4"
            ]
        ]
    },
    {
        "id": "e944094b190529e4",
        "type": "mqtt out",
        "z": "95aaa5b3dec11e56",
        "name": "mqtt发布",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "da35b48ff806507c",
        "x": 1120,
        "y": 100,
        "wires": []
    },
    {
        "id": "61037682fdfa3411",
        "type": "mqtt in",
        "z": "95aaa5b3dec11e56",
        "name": "mqtt订阅",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "da35b48ff806507c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 360,
        "y": 100,
        "wires": [
            [
                "ae67f15e.3ab57"
            ]
        ]
    },
    {
        "id": "589883c5ddd06e17",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "主题订阅",
        "func": "let data = flow.get(\"data\")\nlet devices = data.devices;\n\nlet keys;\nkeys = Object.keys(devices);\nkeys.forEach(key => {\n    let device = devices[key];\n    node.send({\n        action: \"subscribe\",\n        topic: device._inner.topic.device.pub\n    })\n});\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 100,
        "wires": [
            [
                "61037682fdfa3411",
                "112c9aa6e5a460a2"
            ]
        ]
    },
    {
        "id": "ae67f15e.3ab57",
        "type": "switch",
        "z": "95aaa5b3dec11e56",
        "name": "Z3数据",
        "property": "payload.hd.cmd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 500,
        "y": 100,
        "wires": [
            [
                "e832c137.1576"
            ]
        ]
    },
    {
        "id": "e832c137.1576",
        "type": "base64",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "action": "",
        "property": "payload.pld.code",
        "x": 640,
        "y": 100,
        "wires": [
            [
                "6a00af3d.fcc16"
            ]
        ]
    },
    {
        "id": "6a00af3d.fcc16",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "上行数据",
        "func": "\nreturn {\n    action: \"write\",\n    topic: msg.payload.hd.did,\n    payload: msg.payload.pld.code\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 100,
        "wires": [
            [
                "2a50d92d7b1e8c5f"
            ]
        ]
    },
    {
        "id": "1597ce13b80c174d",
        "type": "exec",
        "z": "95aaa5b3dec11e56",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 590,
        "y": 1040,
        "wires": [
            [
                "945c62102251accf",
                "77c694e6c464f8ce"
            ],
            [
                "945c62102251accf",
                "77c694e6c464f8ce"
            ],
            [
                "945c62102251accf",
                "77c694e6c464f8ce"
            ]
        ]
    },
    {
        "id": "07f20c3b16bb22aa",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "启动Z2M",
        "func": "let data = flow.get(\"data\")\nlet topic = msg.topic;\nlet devices = data.devices;\nlet device = devices[topic];\nif (device) {\n    node.send({\n        topic: topic,\n        payload: device._inner.z2m.exec\n    })\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1040,
        "wires": [
            [
                "cae5f63b49b63d67",
                "1597ce13b80c174d"
            ]
        ]
    },
    {
        "id": "1b9d76d1beb414b9",
        "type": "Drives",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "x": 310,
        "y": 1620,
        "wires": [
            [
                "d4697f4f2ba11e50"
            ]
        ]
    },
    {
        "id": "4431333a2c5b62fd",
        "type": "OS",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "x": 310,
        "y": 1660,
        "wires": [
            [
                "8b4c81ae3cc89a32"
            ]
        ]
    },
    {
        "id": "b8cd83b248bdaf3c",
        "type": "Uptime",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "x": 320,
        "y": 1700,
        "wires": [
            [
                "1dc036ad19c157b3"
            ]
        ]
    },
    {
        "id": "f04b600f4ef9670a",
        "type": "CPUs",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "x": 310,
        "y": 1740,
        "wires": [
            [
                "430c1d24d6ff58bb"
            ]
        ]
    },
    {
        "id": "3c1fdc419054989d",
        "type": "Loadavg",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "x": 320,
        "y": 1780,
        "wires": [
            [
                "169271b9eb89b020"
            ]
        ]
    },
    {
        "id": "60d9386e91b09fe7",
        "type": "Memory",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "scale": "Byte",
        "x": 320,
        "y": 1820,
        "wires": [
            [
                "5be1836ccfc9d920"
            ]
        ]
    },
    {
        "id": "80f6975482134892",
        "type": "NetworkIntf",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "x": 330,
        "y": 1860,
        "wires": [
            [
                "66b0ef6de57a6faf"
            ]
        ]
    },
    {
        "id": "d4697f4f2ba11e50",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1620,
        "wires": []
    },
    {
        "id": "8b4c81ae3cc89a32",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1660,
        "wires": []
    },
    {
        "id": "1dc036ad19c157b3",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1700,
        "wires": []
    },
    {
        "id": "430c1d24d6ff58bb",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1740,
        "wires": []
    },
    {
        "id": "169271b9eb89b020",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1780,
        "wires": []
    },
    {
        "id": "5be1836ccfc9d920",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1820,
        "wires": []
    },
    {
        "id": "66b0ef6de57a6faf",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1860,
        "wires": []
    },
    {
        "id": "3b3d32c4b7a865a5",
        "type": "inject",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 1720,
        "wires": [
            [
                "1b9d76d1beb414b9",
                "4431333a2c5b62fd",
                "b8cd83b248bdaf3c",
                "f04b600f4ef9670a",
                "3c1fdc419054989d",
                "60d9386e91b09fe7",
                "80f6975482134892",
                "24525891cb87bbdd"
            ]
        ]
    },
    {
        "id": "24525891cb87bbdd",
        "type": "home-dir",
        "z": "95aaa5b3dec11e56",
        "x": 380,
        "y": 2120,
        "wires": [
            [
                "66b0ef6de57a6faf"
            ]
        ]
    },
    {
        "id": "7bd292a739fdf092",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 40,
        "wires": []
    },
    {
        "id": "945c62102251accf",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 980,
        "wires": []
    },
    {
        "id": "77c694e6c464f8ce",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 1060,
        "wires": []
    },
    {
        "id": "cae5f63b49b63d67",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 940,
        "wires": []
    },
    {
        "id": "5ac4ad5be8835f21",
        "type": "status",
        "z": "95aaa5b3dec11e56",
        "name": "TCP状态变化",
        "scope": [
            "2a50d92d7b1e8c5f"
        ],
        "x": 250,
        "y": 700,
        "wires": [
            [
                "df176e579646b29d"
            ]
        ]
    },
    {
        "id": "df176e579646b29d",
        "type": "json",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "property": "status.text",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 700,
        "wires": [
            [
                "d76715fc2099289e"
            ]
        ]
    },
    {
        "id": "9da107f7f7e9c412",
        "type": "change",
        "z": "95aaa5b3dec11e56",
        "name": "重启TCP",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 540,
        "wires": [
            [
                "dd1d9c395a642389",
                "24e2bbdf06e9b037"
            ]
        ]
    },
    {
        "id": "d76715fc2099289e",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "刷新状态",
        "func": "let data = flow.get(\"data\")\nlet devices = data.devices;\nlet tcp = msg.status.text;\nif (tcp) {\n    let device = devices[tcp.topic];\n    if (device)\n        device._inner.tcp.status = tcp.status;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 700,
        "wires": [
            [
                "7583eae2557aaa12"
            ]
        ]
    },
    {
        "id": "7583eae2557aaa12",
        "type": "switch",
        "z": "95aaa5b3dec11e56",
        "name": "listened",
        "property": "status.text.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "listened",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 680,
        "y": 700,
        "wires": [
            [
                "659bdc170dc01191"
            ]
        ]
    },
    {
        "id": "659bdc170dc01191",
        "type": "change",
        "z": "95aaa5b3dec11e56",
        "name": "设定topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "status.text.topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 700,
        "wires": [
            [
                "582858202e5905ad",
                "361bf8393749ac56"
            ]
        ]
    },
    {
        "id": "21d589a081c8eee8",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "启动TCP+Z2M",
        "func": "let data = flow.get(\"data\")\nlet devices = data.devices;\n\nObject.keys(devices).forEach(key => {\n    let device = devices[key];\n    node.send({\n        topic: key\n    })\n});",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 440,
        "wires": [
            [
                "9da107f7f7e9c412"
            ]
        ]
    },
    {
        "id": "582858202e5905ad",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 760,
        "wires": []
    },
    {
        "id": "3e0eb582faa37b68",
        "type": "inject",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "props": [
            {
                "p": "action",
                "v": "kill",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 430,
        "y": 660,
        "wires": [
            [
                "2a50d92d7b1e8c5f"
            ]
        ]
    },
    {
        "id": "6acb179b8ceea7e1",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "修改配置",
        "func": "let data = flow.get(\"data\");\nlet devices = data.devices;\nlet topic = msg.topic;\nlet device = devices[topic];\nlet config = msg.z2m.configuration;\nif (device) {\n    config.mqtt = device._inner.z2m.configuration.mqtt;\n    config.serial = device._inner.z2m.configuration.serial;\n    config.frontend = device._inner.z2m.configuration.frontend;\n}\nmsg.payload = config;\nmsg.filename = device._inner.z2m.configfile;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 800,
        "wires": [
            [
                "7bfa81ad9dce84cc"
            ]
        ]
    },
    {
        "id": "361bf8393749ac56",
        "type": "change",
        "z": "95aaa5b3dec11e56",
        "name": "copy config",
        "rules": [
            {
                "t": "set",
                "p": "z2m.configuration",
                "pt": "msg",
                "to": "z2m.configuration",
                "tot": "global",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 800,
        "wires": [
            [
                "6acb179b8ceea7e1"
            ]
        ]
    },
    {
        "id": "7bfa81ad9dce84cc",
        "type": "yaml",
        "z": "95aaa5b3dec11e56",
        "property": "payload",
        "name": "",
        "x": 630,
        "y": 800,
        "wires": [
            [
                "910c26f33d91dd04"
            ]
        ]
    },
    {
        "id": "910c26f33d91dd04",
        "type": "file",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 780,
        "y": 800,
        "wires": [
            [
                "07f20c3b16bb22aa"
            ]
        ]
    },
    {
        "id": "b6f6e1dd2bf5ee77",
        "type": "mqtt in",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "topic": "ndiot/device/#",
        "qos": "2",
        "datatype": "json",
        "broker": "da35b48ff806507c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 460,
        "wires": [
            [
                "aed2b49f49b0da4c"
            ]
        ]
    },
    {
        "id": "aed2b49f49b0da4c",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 460,
        "wires": []
    },
    {
        "id": "112c9aa6e5a460a2",
        "type": "change",
        "z": "95aaa5b3dec11e56",
        "name": "配置模板",
        "rules": [
            {
                "t": "set",
                "p": "z2m.template.configuration",
                "pt": "global",
                "to": "{\"homeassistant\":false,\"permit_join\":false,\"mqtt\":{\"base_topic\":\"zigbee2mqtt\",\"server\":\"mqtt://push-access.sdp.101.com:1780\",\"user\":\"ioe\"},\"serial\":{\"port\":\"tcp://127.0.0.1:8190\"},\"device_options\":{\"legacy\":false},\"advanced\":{\"pan_id\":\"GENERATE\",\"network_key\":\"GENERATE\",\"homeassistant_legacy_entity_attributes\":false,\"legacy_api\":false,\"log_level\":\"debug\"},\"frontend\":{\"port\":8090}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "24b3394c8075cc56",
        "type": "http request",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 440,
        "y": 280,
        "wires": [
            [
                "0634a8f7659578b2"
            ]
        ]
    },
    {
        "id": "01d97ad2693ba402",
        "type": "inject",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "props": [
            {
                "p": "url",
                "v": "http://127.0.0.1:8080/mongodb/find?table=test",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 280,
        "wires": [
            [
                "24b3394c8075cc56"
            ]
        ]
    },
    {
        "id": "0634a8f7659578b2",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 280,
        "wires": []
    },
    {
        "id": "52f3e338c6eab14b",
        "type": "inject",
        "z": "95aaa5b3dec11e56",
        "name": "查",
        "props": [
            {
                "p": "url",
                "v": "http://127.0.0.1:8080/mongodb/find",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"abc\":\"123\"}",
        "payloadType": "json",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "4ac708682bcad0fb"
            ]
        ]
    },
    {
        "id": "4ac708682bcad0fb",
        "type": "change",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.table",
                "pt": "msg",
                "to": "test",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.value",
                "pt": "msg",
                "to": "{\"_id\":\"62598232a120643d70c908c7\",\"type\":\"insert\",\"key1\":\"v1\",\"k2\":\"v2\",\"k3\":\"v3\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 340,
        "wires": [
            [
                "24b3394c8075cc56"
            ]
        ]
    },
    {
        "id": "3b774c73d960a3b7",
        "type": "inject",
        "z": "95aaa5b3dec11e56",
        "name": "增",
        "props": [
            {
                "p": "url",
                "v": "http://127.0.0.1:8080/mongodb/insert",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"abc\":\"123\"}",
        "payloadType": "json",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "4ac708682bcad0fb"
            ]
        ]
    }
]