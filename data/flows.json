[
    {
        "id": "7c7a09edf982e2f4",
        "type": "tab",
        "label": "全局配置",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "95aaa5b3dec11e56",
        "type": "tab",
        "label": "Z3协调器",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "da35b48ff806507c",
        "type": "mqtt-broker",
        "name": "push",
        "broker": "push-access.sdp.101.com",
        "port": "1780",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "667c951c0c4a35e5",
        "type": "debug",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 460,
        "wires": []
    },
    {
        "id": "4d8acb6b22e22954",
        "type": "mqtt in",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "da35b48ff806507c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 330,
        "y": 400,
        "wires": [
            [
                "667c951c0c4a35e5"
            ]
        ]
    },
    {
        "id": "f544f205.d51a7",
        "type": "inject",
        "z": "7c7a09edf982e2f4",
        "name": "开始",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "52f82eb73840e302"
            ]
        ]
    },
    {
        "id": "d6802406.a5a078",
        "type": "change",
        "z": "7c7a09edf982e2f4",
        "name": "数据",
        "rules": [
            {
                "t": "set",
                "p": "data",
                "pt": "global",
                "to": "{\"app\":{\"id\":\"ndiot\",\"name\":\"网龙物联网\"},\"product\":{\"id\":\"nd\",\"name\":\"网龙公司\"},\"namespaces\":{\"CL_VRTYG\":{\"id\":\"\",\"name\":\"\",\"nick\":\"长乐VR体验馆\"},\"FZ_DEV\":{\"id\":\"\",\"name\":\"\",\"nick\":\"福州开发环境\"}},\"devices\":{\"ESP8266x0006dbe5\":{\"id\":\"\",\"name\":\"\",\"nick\":\"\",\"facturer\":\"ND\",\"model\":\"Z3CO2652ESP8266\",\"namespace\":\"FZ_DEV\"}},\"tsl\":{\"ND\":{\"Z3CO2652ESP8266\":{\"define\":{\"tsl_version\":\"\",\"profile\":{\"product_id\":\"产品ID或租户ID\",\"group_id\":\"设备所隶属组ID\",\"manufacturer\":\"设备制造商\",\"device_model\":\"设备型号\",\"device_type\":\"z3-co\",\"device_name\":\"设备名称\",\"device_id\":\"设备ID\",\"owner_id\":\"拥有者ID\",\"heart_beat_sec\":\"int, 心跳间隔(秒),0为无需启动心跳检测\",\"report_exp_sec\":\"int, 主动上报超期检测(秒),无心跳场合,等待设备主动上报\",\"parent_device_id\":\"父设备ID\",\"production_date\":\"生产日期\",\"extend_info\":\"扩展信息\",\"remark\":\"备注信息\"}}}}}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "os",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 100,
        "wires": [
            [
                "04a622cf8260f366"
            ]
        ]
    },
    {
        "id": "04a622cf8260f366",
        "type": "function",
        "z": "7c7a09edf982e2f4",
        "name": "数据补全",
        "func": "let data = global.get(\"data\");\n\nlet namespaces = data.namespaces;\nlet devices = data.devices;\nlet tsl = data.tsl;\nlet keys;\nlet setDeviceTopic = (device) => {\n    let appId = data.app.id;\n    let typeId = \"/device\";\n    let productId = \"/\" + data.product.id;\n    let parentId = \"/\" + (device.parent || \"0\");\n    let did = \"/\" + device.id;\n    device.subtopic = appId + typeId + productId + parentId + did + \"/sub\";\n    device.pubtopic = appId + typeId + productId + parentId + did + \"/pub\";\n}\n\nkeys = Object.keys(namespaces);\nkeys.forEach(key => {\n    namespaces[key].id = key;\n});\n\n\n\nkeys = Object.keys(devices);\nkeys.forEach(key => {\n    let device = devices[key];\n    device.id = key;\n    if(typeof(device.namespace) == \"string\") {\n        device.namespace=namespaces[device.namespace];\n    }\n    device.tsl = tsl[device.facturer][device.model]\n    setDeviceTopic(device);\n});\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 100,
        "wires": [
            [
                "500adc0994d94415"
            ]
        ]
    },
    {
        "id": "500adc0994d94415",
        "type": "link out",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "mode": "link",
        "links": [
            "971801346bcfe01d"
        ],
        "x": 805,
        "y": 100,
        "wires": []
    },
    {
        "id": "52f82eb73840e302",
        "type": "OS",
        "z": "7c7a09edf982e2f4",
        "name": "",
        "x": 270,
        "y": 100,
        "wires": [
            [
                "d6802406.a5a078"
            ]
        ]
    },
    {
        "id": "2a50d92d7b1e8c5f",
        "type": "mtcp-server",
        "z": "95aaa5b3dec11e56",
        "action": "action",
        "actionType": "msg",
        "port": "port",
        "portType": "msg",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "xmlAttrkey": "$",
        "xmlCharkey": "_",
        "xmlStrip": false,
        "xmlArray": false,
        "xmlNormalizeTags": false,
        "xmlNormalize": false,
        "write": "payload",
        "writeType": "msg",
        "writeHost": "",
        "writeHostType": "str",
        "writePort": "",
        "writePortType": "str",
        "closeHost": "",
        "closeHostType": "str",
        "closePort": "",
        "closePortType": "str",
        "topic": "",
        "name": "",
        "x": 770,
        "y": 120,
        "wires": [
            [
                "146f6d28af979aef"
            ]
        ]
    },
    {
        "id": "971801346bcfe01d",
        "type": "link in",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "links": [
            "500adc0994d94415"
        ],
        "x": 85,
        "y": 40,
        "wires": [
            [
                "3403f1cca771583e"
            ]
        ]
    },
    {
        "id": "dd1d9c395a642389",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "退出TCP",
        "func": "\nreturn {action: \"kill\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 80,
        "wires": [
            [
                "2a50d92d7b1e8c5f"
            ]
        ]
    },
    {
        "id": "3403f1cca771583e",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "Z3设备",
        "func": "let gData = msg.payload;\nlet data = {};\nlet tcpPort = 8190;\nlet devices = gData.devices;\n\ndata.devices = {};\nlet setDevice = (device, define, tcpPort) => {\n    data.devices[device.id] = {\n        device: device,\n        tcp: {\n            port: tcpPort\n        },\n        configuration: {\n            mqtt: {\n                base_topic: device.id,\n                server: \"mqtt://push-access.sdp.101.com:1780\",\n                user: \"ioe\"\n            },\n            serial: {\n                port: \"tcp://127.0.0.1:\" + tcpPort\n            },\n            frontend: {\n                port: tcpPort - 100\n            }\n        }\n    }\n}\n\nlet keys;\nkeys = Object.keys(devices);\nkeys.forEach(key => {\n    let device = devices[key];\n    if (device.tsl && device.tsl.define) {\n        let define = device.tsl.define;\n        if (define.profile.device_type == \"z3-co\") {\n            setDevice(device, define, tcpPort);\n            tcpPort++;\n        }\n    }\n});\n\nflow.set(\"data\", data)\n\nreturn {payload: data};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 40,
        "wires": [
            [
                "dd1d9c395a642389",
                "24e2bbdf06e9b037"
            ]
        ]
    },
    {
        "id": "4da7e379a1c8765f",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "启动TCP",
        "func": "let data = msg.payload;\nlet devices = data.devices;\nlet keys;\nkeys = Object.keys(data.devices);\nkeys.forEach(key => {\n    let device = devices[key];\n    node.send({\n        action: \"listen\",\n        port: device.tcp.port,\n        topic: key\n    })\n});\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 120,
        "wires": [
            [
                "2a50d92d7b1e8c5f"
            ]
        ]
    },
    {
        "id": "24e2bbdf06e9b037",
        "type": "delay",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 230,
        "y": 120,
        "wires": [
            [
                "4da7e379a1c8765f",
                "589883c5ddd06e17"
            ]
        ]
    },
    {
        "id": "146f6d28af979aef",
        "type": "base64",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 900,
        "y": 120,
        "wires": [
            [
                "7c8a25fc966a2456"
            ]
        ]
    },
    {
        "id": "7c8a25fc966a2456",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "下行数据",
        "func": "let devices = flow.get(\"data\").devices;\nlet did = msg.topic;\nlet device = devices[did];\nlet hd = {\n    cmd: 3\n}\nlet pld = {\n    code: msg.payload\n}\n\nreturn {\n    topic: device.subtopic,\n    payload:{\n        hd: hd, \n        pld: pld\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 200,
        "wires": [
            [
                "e944094b190529e4"
            ]
        ]
    },
    {
        "id": "e944094b190529e4",
        "type": "mqtt out",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "da35b48ff806507c",
        "x": 1110,
        "y": 200,
        "wires": []
    },
    {
        "id": "61037682fdfa3411",
        "type": "mqtt in",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "da35b48ff806507c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 1,
        "x": 290,
        "y": 200,
        "wires": [
            [
                "ae67f15e.3ab57"
            ]
        ]
    },
    {
        "id": "589883c5ddd06e17",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "主题订阅",
        "func": "let data = global.get(\"data\")\nlet devices = data.devices;\n\nlet keys;\nkeys = Object.keys(data.devices);\nkeys.forEach(key => {\n    let device = devices[key];\n    node.send({\n        action: \"subscribe\",\n        topic: device.pubtopic\n    })\n});\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 200,
        "wires": [
            [
                "61037682fdfa3411"
            ]
        ]
    },
    {
        "id": "ae67f15e.3ab57",
        "type": "switch",
        "z": "95aaa5b3dec11e56",
        "name": "Z3数据",
        "property": "payload.hd.cmd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 200,
        "wires": [
            [
                "e832c137.1576"
            ]
        ]
    },
    {
        "id": "e832c137.1576",
        "type": "base64",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "action": "",
        "property": "payload.pld.code",
        "x": 560,
        "y": 200,
        "wires": [
            [
                "6a00af3d.fcc16"
            ]
        ]
    },
    {
        "id": "6a00af3d.fcc16",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "上行数据",
        "func": "\nreturn {\n    action: \"write\",\n    topic: msg.payload.hd.did,\n    payload: msg.payload.pld.code\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 200,
        "wires": [
            [
                "2a50d92d7b1e8c5f"
            ]
        ]
    },
    {
        "id": "883458eec864377d",
        "type": "complete",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "scope": [
            "4da7e379a1c8765f",
            "589883c5ddd06e17"
        ],
        "uncaught": false,
        "x": 170,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "1597ce13b80c174d",
        "type": "exec",
        "z": "95aaa5b3dec11e56",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 480,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "07f20c3b16bb22aa",
        "type": "function",
        "z": "95aaa5b3dec11e56",
        "name": "启动Z2M",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "a4de7784c8a5b141",
        "type": "yaml",
        "z": "95aaa5b3dec11e56",
        "property": "payload",
        "name": "",
        "x": 290,
        "y": 660,
        "wires": [
            [
                "e4a1cf79f25b7d76",
                "3848d1b62809a168"
            ]
        ]
    },
    {
        "id": "c4818ccfd1367106",
        "type": "inject",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "homeassistant: false permit_join: false mqtt:   base_topic: CMDGATE_FZ_DEV_CC2652   server: mqtt://push-access.sdp.101.com:1780   user: ioe serial:   port: COM19 device_options:   legacy: false advanced:   channel: 15   baudrate: 115200   homeassistant_legacy_entity_attributes: false   legacy_api: false   log_level: debug frontend:   port: 8090 external_converters:   - netdragon.js   - honyar.js devices:   '0x00158d00035330f1':     friendly_name: '0x00158d00035330f1'   '0x00158d000353c53f':     friendly_name: '0x00158d000353c53f'   '0x60a423fffe348618':     friendly_name: '0x60a423fffe348618'   '0x00158d0007ee2669':     friendly_name: '0x00158d0007ee2669'   '0xa4c138d1a72aca60':     friendly_name: '0xa4c138d1a72aca60'   '0xa4c138b3897919ff':     friendly_name: '0xa4c138b3897919ff'",
        "payloadType": "str",
        "x": 130,
        "y": 660,
        "wires": [
            [
                "8b1d994bbdbb71db"
            ]
        ]
    },
    {
        "id": "e4a1cf79f25b7d76",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 660,
        "wires": []
    },
    {
        "id": "8b1d994bbdbb71db",
        "type": "file in",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "filename": "E:\\temp\\z2m\\configuration.yaml",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 230,
        "y": 580,
        "wires": [
            [
                "e4a1cf79f25b7d76",
                "a4de7784c8a5b141"
            ]
        ]
    },
    {
        "id": "3848d1b62809a168",
        "type": "yaml",
        "z": "95aaa5b3dec11e56",
        "property": "payload",
        "name": "",
        "x": 390,
        "y": 800,
        "wires": [
            [
                "e4a1cf79f25b7d76"
            ]
        ]
    },
    {
        "id": "1b9d76d1beb414b9",
        "type": "Drives",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "x": 250,
        "y": 960,
        "wires": [
            [
                "d4697f4f2ba11e50"
            ]
        ]
    },
    {
        "id": "4431333a2c5b62fd",
        "type": "OS",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "x": 250,
        "y": 1000,
        "wires": [
            [
                "8b4c81ae3cc89a32"
            ]
        ]
    },
    {
        "id": "b8cd83b248bdaf3c",
        "type": "Uptime",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "x": 260,
        "y": 1040,
        "wires": [
            [
                "1dc036ad19c157b3"
            ]
        ]
    },
    {
        "id": "f04b600f4ef9670a",
        "type": "CPUs",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "x": 250,
        "y": 1080,
        "wires": [
            [
                "430c1d24d6ff58bb"
            ]
        ]
    },
    {
        "id": "3c1fdc419054989d",
        "type": "Loadavg",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "x": 260,
        "y": 1120,
        "wires": [
            [
                "169271b9eb89b020"
            ]
        ]
    },
    {
        "id": "60d9386e91b09fe7",
        "type": "Memory",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "scale": "Byte",
        "x": 260,
        "y": 1160,
        "wires": [
            [
                "5be1836ccfc9d920"
            ]
        ]
    },
    {
        "id": "80f6975482134892",
        "type": "NetworkIntf",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "x": 270,
        "y": 1200,
        "wires": [
            [
                "66b0ef6de57a6faf"
            ]
        ]
    },
    {
        "id": "d4697f4f2ba11e50",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 960,
        "wires": []
    },
    {
        "id": "8b4c81ae3cc89a32",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1000,
        "wires": []
    },
    {
        "id": "1dc036ad19c157b3",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1040,
        "wires": []
    },
    {
        "id": "430c1d24d6ff58bb",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1080,
        "wires": []
    },
    {
        "id": "169271b9eb89b020",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1120,
        "wires": []
    },
    {
        "id": "5be1836ccfc9d920",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1160,
        "wires": []
    },
    {
        "id": "66b0ef6de57a6faf",
        "type": "debug",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1200,
        "wires": []
    },
    {
        "id": "3b3d32c4b7a865a5",
        "type": "inject",
        "z": "95aaa5b3dec11e56",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 70,
        "y": 1060,
        "wires": [
            [
                "1b9d76d1beb414b9",
                "4431333a2c5b62fd",
                "b8cd83b248bdaf3c",
                "f04b600f4ef9670a",
                "3c1fdc419054989d",
                "60d9386e91b09fe7",
                "80f6975482134892",
                "24525891cb87bbdd"
            ]
        ]
    },
    {
        "id": "24525891cb87bbdd",
        "type": "home-dir",
        "z": "95aaa5b3dec11e56",
        "x": 320,
        "y": 1460,
        "wires": [
            [
                "66b0ef6de57a6faf"
            ]
        ]
    }
]